{
  "address": "0x864c54FB4bC795140E8c48e3f7372A9DF01B1f1F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IRestore",
          "name": "_restore",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_payment",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_fund",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timeBuffer",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reservePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_minBidIncrementPercentage",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "extended",
          "type": "bool"
        }
      ],
      "name": "AuctionBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8[3]",
          "name": "saleSplit",
          "type": "uint8[3]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDuration",
          "type": "uint256"
        }
      ],
      "name": "AuctionDurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "AuctionExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBidIncrementPercentage",
          "type": "uint256"
        }
      ],
      "name": "AuctionMinBidIncrementPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reservePrice",
          "type": "uint256"
        }
      ],
      "name": "AuctionReservePriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AuctionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeBuffer",
          "type": "uint256"
        }
      ],
      "name": "AuctionTimeBufferUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFund",
          "type": "address"
        }
      ],
      "name": "FundAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NoBuyer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPayment",
          "type": "address"
        }
      ],
      "name": "PaymentAddressUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "auction",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "settled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8[3]",
          "name": "split",
          "type": "uint8[3]"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "createBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBidIncrementPercentage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reservePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restore",
      "outputs": [
        {
          "internalType": "contract IRestore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newFund",
          "type": "address"
        }
      ],
      "name": "setFundAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_minBidIncrementPercentage",
          "type": "uint8"
        }
      ],
      "name": "setMinBidIncrementPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newPayment",
          "type": "address"
        }
      ],
      "name": "setPaymentAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reservePrice",
          "type": "uint256"
        }
      ],
      "name": "setReservePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timeBuffer",
          "type": "uint256"
        }
      ],
      "name": "setTimeBuffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeBuffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6601a4f796e1af1ddce883365beb8166f47928a1e22449270aabad5f200177da",
  "receipt": {
    "to": null,
    "from": "0x5f3371793285920351344a1EaaAA48d45e600652",
    "contractAddress": "0x864c54FB4bC795140E8c48e3f7372A9DF01B1f1F",
    "transactionIndex": 194,
    "gasUsed": "2974147",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000a00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x73e3d3c65aba22b51963635190243ab8c155d952e4359e51aa96377e6feda84f",
    "transactionHash": "0x6601a4f796e1af1ddce883365beb8166f47928a1e22449270aabad5f200177da",
    "logs": [
      {
        "transactionIndex": 194,
        "blockNumber": 14880774,
        "transactionHash": "0x6601a4f796e1af1ddce883365beb8166f47928a1e22449270aabad5f200177da",
        "address": "0x864c54FB4bC795140E8c48e3f7372A9DF01B1f1F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005f3371793285920351344a1eaaaa48d45e600652"
        ],
        "data": "0x",
        "logIndex": 311,
        "blockHash": "0x73e3d3c65aba22b51963635190243ab8c155d952e4359e51aa96377e6feda84f"
      }
    ],
    "blockNumber": 14880774,
    "cumulativeGasUsed": "18042849",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x136fA646d6eEB201D4424c0c6a8d6cD806fEB96f",
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
    "0x911753aB62fFd27B78C6db07685DBf0089634eb4",
    "0x9e26a782c88CbD70F47575804b1f10dC58F91afd",
    600,
    "100000000000000000",
    5,
    345600
  ],
  "numDeployments": 1,
  "solcInputHash": "da8abac695309491cdcd02fb46bde356",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRestore\",\"name\":\"_restore\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_payment\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeBuffer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_minBidIncrementPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"extended\",\"type\":\"bool\"}],\"name\":\"AuctionBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"saleSplit\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"AuctionDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBidIncrementPercentage\",\"type\":\"uint256\"}],\"name\":\"AuctionMinBidIncrementPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"}],\"name\":\"AuctionReservePriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeBuffer\",\"type\":\"uint256\"}],\"name\":\"AuctionTimeBufferUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFund\",\"type\":\"address\"}],\"name\":\"FundAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NoBuyer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPayment\",\"type\":\"address\"}],\"name\":\"PaymentAddressUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8[3]\",\"name\":\"split\",\"type\":\"uint8[3]\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"createBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBidIncrementPercentage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restore\",\"outputs\":[{\"internalType\":\"contract IRestore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFund\",\"type\":\"address\"}],\"name\":\"setFundAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_minBidIncrementPercentage\",\"type\":\"uint8\"}],\"name\":\"setMinBidIncrementPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPayment\",\"type\":\"address\"}],\"name\":\"setPaymentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reservePrice\",\"type\":\"uint256\"}],\"name\":\"setReservePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeBuffer\",\"type\":\"uint256\"}],\"name\":\"setTimeBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAuction(address,uint256,uint8[3])\":{\"params\":{\"creator\":\"the address of the creator so we can pass it to the payment splitter once the auction is settled.\",\"split\":\"a fixed-sized array of max 3 members which determines how sale proceeds are split between pr1s0nartPayment              (the address that exchanges into USD and pays LFOs), pr1s0nartFund (our onchain fund to cover operations),              and the creator address if they have one and can receive crypto in addition to the LFO payments we cover.              This is likely only the case if they are no longer incarcerated and have an ETH address.\",\"tokenId\":\"the index of the art piece to be auctioned off\"}},\"createBid(uint256)\":{\"details\":\"This contract only accepts payment in ETH.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setDuration(uint256)\":{\"details\":\"Only callable by the owner.\"},\"setFundAddress(address)\":{\"details\":\"Only callable by the owner.\"},\"setMinBidIncrementPercentage(uint8)\":{\"details\":\"Only callable by the owner.\"},\"setPaymentAddress(address)\":{\"details\":\"Only callable by the owner.\"},\"setReservePrice(uint256)\":{\"details\":\"Only callable by the owner.\"},\"setTimeBuffer(uint256)\":{\"details\":\"Only callable by the owner.\"},\"settleAuction()\":{\"details\":\"This function can only be called when the contract is paused.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Justice Justice - a contract that creates unique NFTs to be auctioned off, using the Restore ERC721 Contract. Adapted from the wonderful Nounders. https://github.com/nounsDAO/nouns-monorepo/blob/2cbe6c7bdfee258e646e8d9e84302375320abc72/packages/nouns-contracts/contracts/NounsAuctionHouse.sol Once auctioned, this contract does not immediatedly transfer the art, but 'freezes' it, while ensuring that the steward of the system, which is multisig maintained by Pr1s0n Art Inc - a 501(c)3 registered in Florida - can only ever transfer them to the winning bidder. Pr1s0n Art takes the funds raised from the sale, exchanges them into USD, pays the Legal Financial Obligations of the people who made the art and then reattaches the receipts as the `data` in `transferToBuyer`, which uses the `safeTransfer` method in the ERC721 standard. This means you receive not just the art, but the full story - aesthetic, economic, and sociopolitical - of a human being's journey home. This contract enacts restorative justice because, unless we are all involved with justice, we will never realise it fully.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Set up the Justice Auction House and prepopulate initial values\"},\"createAuction(address,uint256,uint8[3])\":{\"notice\":\"Create an auction.\"},\"createBid(uint256)\":{\"notice\":\"Create a bid for a pr1s0n.art piece, with a given amount.\"},\"setDuration(uint256)\":{\"notice\":\"Set the duration for auctions.\"},\"setFundAddress(address)\":{\"notice\":\"Set the pr1s0nartFund address (handles onchain fund for operations)\"},\"setMinBidIncrementPercentage(uint8)\":{\"notice\":\"Set the auction minimum bid increment percentage.\"},\"setPaymentAddress(address)\":{\"notice\":\"Set the pr1s0nart payment address (handles exchange to USD + LFO payments).\"},\"setReservePrice(uint256)\":{\"notice\":\"Set the auction reserve price.\"},\"setTimeBuffer(uint256)\":{\"notice\":\"Set the auction time buffer.\"},\"settleAuction()\":{\"notice\":\"Settle the current auction.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Justice.sol\":\"Justice\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Justice.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.7;\\n\\nimport { ReentrancyGuard } from '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport { IJustice } from './interfaces/IJustice.sol';\\nimport { IRestore } from './interfaces/IRestore.sol';\\nimport { IWETH } from './interfaces/IWETH.sol';\\n\\n/**\\n * @title Justice\\n *\\n * Justice - a contract that creates unique NFTs to be auctioned off, using the Restore ERC721 Contract.\\n *\\n * Adapted from the wonderful Nounders.\\n * https://github.com/nounsDAO/nouns-monorepo/blob/2cbe6c7bdfee258e646e8d9e84302375320abc72/packages/nouns-contracts/contracts/NounsAuctionHouse.sol\\n *\\n * Once auctioned, this contract does not immediatedly transfer the art, but 'freezes' it, while ensuring that the steward of the system,\\n * which is multisig maintained by Pr1s0n Art Inc - a 501(c)3 registered in Florida - can only ever transfer them to the winning bidder.\\n * Pr1s0n Art takes the funds raised from the sale, exchanges them into USD, pays the Legal Financial Obligations of the people who\\n * made the art and then reattaches the receipts as the `data` in `transferToBuyer`, which uses the `safeTransfer` method in the\\n * ERC721 standard.\\n *\\n * This means you receive not just the art, but the full story - aesthetic, economic, and sociopolitical - of a human being's journey\\n * home. This contract enacts restorative justice because, unless we are all involved with justice, we will never realise it fully.\\n */\\n                                                                                                                                                                           \\n//      \\u2588\\u2588\\u2557\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n//      \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\n//      \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n// \\u2588\\u2588   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u255a\\u2550\\u2550\\u2550\\u2550\\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2551\\u255a\\u2550\\u2550\\u2550\\u2550\\u2588\\u2588\\u2551\\n// \\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551      \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\n//  \\u255a\\u2550\\u2550\\u2550\\u2550\\u255d  \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d   \\u255a\\u2550\\u255d      \\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n                                                \\ncontract Justice is IJustice, ReentrancyGuard, Ownable {\\n    using SafeERC20 for IERC20;\\n    // The Restore ERC721 token contract\\n    IRestore public restore;\\n\\n    // The address of the WETH contract\\n    address public weth;\\n\\n    // The minimum amount of time left in an auction after a new bid is created\\n    uint256 public timeBuffer;\\n\\n    // The minimum price accepted in an auction\\n    uint256 public reservePrice;\\n\\n    // The minimum percentage difference between the last bid amount and the current bid\\n    uint8 public minBidIncrementPercentage;\\n\\n    // The duration of a single auction\\n    uint256 public duration;\\n\\n    // The active auction\\n    IJustice.Auction public auction;\\n\\n    // The contract that handles sale splits\\n    address payment;\\n\\n    // The address of the pr1s0nart onchain fund for operations\\n    address fund;\\n\\n    /**\\n     * @notice Set up the Justice Auction House and prepopulate initial values\\n     */\\n    constructor(\\n        IRestore _restore,\\n        address _weth,\\n        address _payment,\\n        address _fund,\\n        uint256 _timeBuffer,\\n        uint256 _reservePrice,\\n        uint8 _minBidIncrementPercentage,\\n        uint256 _duration\\n    ) {\\n        restore = _restore;\\n        weth = _weth;\\n        payment = _payment;\\n        fund = _fund;\\n        timeBuffer = _timeBuffer;\\n        reservePrice = _reservePrice;\\n        minBidIncrementPercentage = _minBidIncrementPercentage;\\n        duration = _duration;\\n    }\\n\\n    /**\\n     * @notice Settle the current auction.\\n     * @dev This function can only be called when the contract is paused.\\n     */\\n    function settleAuction() \\n        external \\n        override \\n        nonReentrant \\n    {\\n        _settleAuction();\\n    }\\n\\n    /**\\n     * @notice Create a bid for a pr1s0n.art piece, with a given amount.\\n     * @dev This contract only accepts payment in ETH.\\n     */\\n    function createBid(uint256 tokenId) \\n        external \\n        payable \\n        override \\n        nonReentrant \\n    {\\n        IJustice.Auction memory _auction = auction;\\n\\n        require(_auction.tokenId == tokenId, 'Justice: Art not up for auction');\\n        require(block.timestamp < _auction.endTime, 'Justice: Auction expired');\\n        require(msg.value >= reservePrice, 'Justice: Must send at least reservePrice');\\n        require(\\n            msg.value >= _auction.amount + ((_auction.amount * minBidIncrementPercentage) / 100),\\n            'Justice: Must send more than last bid by minBidIncrementPercentage amount'\\n        );\\n\\n        address payable lastBidder = _auction.bidder;\\n\\n        auction.amount = msg.value;\\n        auction.bidder = payable(msg.sender);\\n\\n        // Extend the auction if the bid was received within `timeBuffer` of the auction end time\\n        bool extended = _auction.endTime - block.timestamp < timeBuffer;\\n        if (extended) {\\n            auction.endTime = _auction.endTime = block.timestamp + timeBuffer;\\n        }\\n\\n        emit AuctionBid(_auction.tokenId, msg.sender, msg.value, extended);\\n\\n        if (extended) {\\n            emit AuctionExtended(_auction.tokenId, _auction.endTime);\\n        }\\n\\n        // Refund the last bidder, if applicable\\n        if (lastBidder != address(0)) {\\n            _safeTransferETHWithFallback(lastBidder, _auction.amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Set the pr1s0nart payment address (handles exchange to USD + LFO payments).\\n     * @dev Only callable by the owner.\\n     */\\n    function setPaymentAddress(address _newPayment) \\n        external \\n        override \\n        onlyOwner \\n    {\\n        payment = _newPayment;\\n\\n        emit PaymentAddressUpdated(_newPayment);\\n    }\\n\\n    /**\\n     * @notice Set the pr1s0nartFund address (handles onchain fund for operations)\\n     * @dev Only callable by the owner.\\n     */\\n    function setFundAddress(address _newFund) \\n        external \\n        override \\n        onlyOwner \\n    {\\n        fund = _newFund;\\n\\n        emit FundAddressUpdated(_newFund);\\n    }\\n\\n    /**\\n     * @notice Set the auction time buffer.\\n     * @dev Only callable by the owner.\\n     */\\n    function setTimeBuffer(uint256 _timeBuffer) \\n        external \\n        override \\n        onlyOwner \\n    {\\n        timeBuffer = _timeBuffer;\\n\\n        emit AuctionTimeBufferUpdated(_timeBuffer);\\n    }\\n\\n    /**\\n     * @notice Set the duration for auctions.\\n     * @dev Only callable by the owner.\\n     */\\n    function setDuration(uint256 _duration) \\n        external \\n        override \\n        onlyOwner \\n    {\\n        duration = _duration;\\n\\n        emit AuctionDurationUpdated(_duration);\\n    }\\n\\n    /**\\n     * @notice Set the auction reserve price.\\n     * @dev Only callable by the owner.\\n     */\\n    function setReservePrice(uint256 _reservePrice) \\n        external \\n        override \\n        onlyOwner \\n    {\\n        reservePrice = _reservePrice;\\n\\n        emit AuctionReservePriceUpdated(_reservePrice);\\n    }\\n\\n    /**\\n     * @notice Set the auction minimum bid increment percentage.\\n     * @dev Only callable by the owner.\\n     */\\n    function setMinBidIncrementPercentage(uint8 _minBidIncrementPercentage) \\n        external \\n        override \\n        onlyOwner \\n    {\\n        minBidIncrementPercentage = _minBidIncrementPercentage;\\n\\n        emit AuctionMinBidIncrementPercentageUpdated(_minBidIncrementPercentage);\\n    }\\n\\n    /**\\n     * @notice Create an auction.\\n     * @param creator the address of the creator so we can pass it to the payment splitter once the auction is settled.\\n     * @param tokenId the index of the art piece to be auctioned off\\n     * @param split a fixed-sized array of max 3 members which determines how sale proceeds are split between pr1s0nartPayment\\n     *              (the address that exchanges into USD and pays LFOs), pr1s0nartFund (our onchain fund to cover operations),\\n     *              and the creator address if they have one and can receive crypto in addition to the LFO payments we cover.\\n     *              This is likely only the case if they are no longer incarcerated and have an ETH address.\\n     */\\n    function createAuction(address creator, uint256 tokenId, uint8[3] memory split) \\n        external \\n        onlyOwner \\n    {\\n            require(restore.auctionable(tokenId) && address(restore) == restore.ownerOf(tokenId), 'Justice: token id is not auctionable');\\n            uint256 startTime = block.timestamp;\\n            uint256 endTime = startTime + duration;\\n\\n            auction = Auction({\\n                saleSplit: split,\\n                creator: creator,\\n                tokenId: tokenId,\\n                amount: 0,\\n                startTime: startTime,\\n                endTime: endTime,\\n                bidder: payable(0),\\n                settled: false\\n            });\\n\\n            emit AuctionCreated(tokenId, split, creator, startTime, endTime);\\n    }\\n\\n    /**\\n     * @notice Settle an auction, freezing the tokenId to the buyer's address and sending the funds to pr1s0n.art for processing.\\n     * @dev If there are no bids, the art is transferred back to pr1s0n.art\\n     */\\n    function _settleAuction() \\n        internal \\n    {\\n        IJustice.Auction memory _auction = auction;\\n\\n        require(_auction.startTime != 0, \\\"Justice: Auction hasn't begun\\\");\\n        require(!_auction.settled, 'Justice: Auction has already been settled');\\n        require(block.timestamp >= _auction.endTime, \\\"Justice: Auction hasn't completed\\\");\\n\\n        auction.settled = true;\\n        emit AuctionSettled(_auction.tokenId, _auction.bidder, _auction.amount);\\n\\n        if (_auction.bidder == address(0)) {\\n            emit NoBuyer(_auction.tokenId);\\n        } else {\\n            restore.freeze(_auction.bidder, _auction.tokenId);\\n        }\\n\\n        if (_auction.amount > 0) {\\n            uint256 LFOShare = (_auction.saleSplit[0] * _auction.amount / 100 );\\n            _safeTransferETHWithFallback(payment, LFOShare);\\n            uint256 PAShare = (_auction.saleSplit[1] * _auction.amount / 100 );\\n            _safeTransferETHWithFallback(fund, PAShare);\\n            // We do this to ensure effectively 100% of the sale proceeds get distributed and to guard against weird % edge cases\\n            uint256 creatorShare = _auction.amount - LFOShare - PAShare;\\n            _safeTransferETHWithFallback(_auction.creator, creatorShare);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer ETH. If the ETH transfer fails, wrap the ETH and try send it as WETH.\\n     * @param recipient the address of the receiver\\n     * @param amount the total amount\\n     */\\n    function _safeTransferETHWithFallback(address recipient, uint256 amount) \\n        internal \\n    {\\n        if (!_safeTransferETH(recipient, amount)) {\\n            IWETH(weth).deposit{ value: amount }();\\n            IERC20(weth).safeTransfer(recipient, amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer ETH and return the success status.\\n     */\\n    function _safeTransferETH(address recipient, uint256 amount) \\n        internal \\n        returns (bool) \\n    {\\n        (bool success, ) = recipient.call{value: amount, gas: 30_000 }(new bytes(0));\\n        return success;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc1efc207a7968a8730de766f043278e1fce76c160329c3c09b17876bff6c916e\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IJustice.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.7;\\n\\ninterface IJustice {\\n\\n    struct Auction {\\n        // Fixed-size array of max 3 members for specifiying splits from sales\\n        // 0 = pr1s0nartPayment, 1 = pr1s0nartFund, 2 = creatorAddress\\n        uint8[3] saleSplit;\\n        // address of creator. If they have none, we use pr1s0nartPayment \\n        address creator;\\n        // ID for the Art (ERC721 token ID)\\n        uint256 tokenId;\\n        // The current highest bid amount\\n        uint256 amount;\\n        // The time that the auction started\\n        uint256 startTime;\\n        // The time that the auction is scheduled to end\\n        uint256 endTime;\\n        // The address of the current highest bid\\n        address payable bidder;\\n        // Whether or not the auction has been settled\\n        bool settled;\\n    }\\n\\n    event AuctionCreated(uint256 indexed tokenId, uint8[3] saleSplit, address creator, uint256 startTime, uint256 endTime);\\n\\n    event AuctionBid(uint256 indexed tokenId, address sender, uint256 value, bool extended);\\n\\n    event AuctionExtended(uint256 indexed tokenId, uint256 endTime);\\n\\n    event AuctionSettled(uint256 indexed tokenId, address winner, uint256 amount);\\n\\n    event NoBuyer(uint256 indexed tokenId);\\n\\n    event PaymentAddressUpdated(address newPayment);\\n\\n    event FundAddressUpdated(address newFund);\\n\\n    event AuctionDurationUpdated(uint256 newDuration);\\n\\n    event AuctionTimeBufferUpdated(uint256 timeBuffer);\\n\\n    event AuctionReservePriceUpdated(uint256 reservePrice);\\n\\n    event AuctionMinBidIncrementPercentageUpdated(uint256 minBidIncrementPercentage);\\n\\n    function settleAuction() external;\\n\\n    function createBid(uint256 tokenId) external payable;\\n\\n    function setPaymentAddress(address newPayment) external;\\n\\n    function setFundAddress(address newFund) external;\\n\\n    function setDuration(uint256 duration) external;\\n\\n    function setTimeBuffer(uint256 timeBuffer) external;\\n\\n    function setReservePrice(uint256 reservePrice) external;\\n\\n    function setMinBidIncrementPercentage(uint8 minBidIncrementPercentage) external;\\n\\n}\",\"keccak256\":\"0xeeb109590157ae4150dced74ce673e76adfd9b30aedf33e8c06a0109047e072b\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IRestore.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.7;\\n\\nimport { IERC721 } from '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\ninterface IRestore is IERC721 {\\n\\n    event ReadyForAuction(address to, uint256 tokenId, string uri);\\n\\n    event ArtFrozen(address buyer, uint256 indexed tokenId);\\n\\n    event ArtTransferred(address buyer, uint256 indexed tokenId, bytes data);\\n\\n    function mintForAuction(address creator, string memory uri) external returns (uint256 tokenId);\\n\\n    function transferToBuyer(uint256 tokenId, bytes memory data) external;\\n\\n    function freeze(address buyer, uint256 frozenTokenId) external;\\n\\n    function auctionable(uint256 tokenId) external returns (bool);\\n}\",\"keccak256\":\"0xec6b35dbbb91fa38faf7325b51213486c286e36c9c02a3f83c6c2741a0068b04\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.7;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n}\",\"keccak256\":\"0xa0ba69c7c533a7ab08f284eb809aca197bd4b774b46fc3127acfb4d44438a380\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c806385dc3004116100a0578063ce9c7c0d11610064578063ce9c7c0d14610338578063db2e1eed14610361578063ec91f2a41461038c578063f2fde38b146103b7578063f6be71d1146103e057610114565b806385dc3004146102795780638da5cb5b146102a2578063a4d0a17e146102cd578063a8a9fe15146102e4578063b296024d1461030d57610114565b80635e1e1004116100e75780635e1e1004146101c3578063659dd2b4146101ec5780637120334b14610208578063715018a6146102315780637d9f6db51461024857610114565b80630fb5a6b4146101195780632fda332e1461014457806336ebdb381461016f5780633fc8cef314610198575b600080fd5b34801561012557600080fd5b5061012e610409565b60405161013b9190612870565b60405180910390f35b34801561015057600080fd5b5061015961040f565b6040516101669190612673565b60405180910390f35b34801561017b57600080fd5b506101966004803603810190610191919061218d565b610435565b005b3480156101a457600080fd5b506101ad610506565b6040516101ba919061251b565b60405180910390f35b3480156101cf57600080fd5b506101ea60048036038101906101e59190612086565b61052c565b005b61020660048036038101906102019190612160565b610623565b005b34801561021457600080fd5b5061022f600480360381019061022a9190612160565b610a9a565b005b34801561023d57600080fd5b50610246610b57565b005b34801561025457600080fd5b5061025d610bdf565b60405161027097969594939291906125bf565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b9190612086565b610c5c565b005b3480156102ae57600080fd5b506102b7610d53565b6040516102c4919061251b565b60405180910390f35b3480156102d957600080fd5b506102e2610d7d565b005b3480156102f057600080fd5b5061030b600480360381019061030691906120e0565b610ddd565b005b34801561031957600080fd5b50610322611202565b60405161032f91906128a6565b60405180910390f35b34801561034457600080fd5b5061035f600480360381019061035a9190612160565b611215565b005b34801561036d57600080fd5b506103766112d2565b6040516103839190612870565b60405180910390f35b34801561039857600080fd5b506103a16112d8565b6040516103ae9190612870565b60405180910390f35b3480156103c357600080fd5b506103de60048036038101906103d99190612086565b6112de565b005b3480156103ec57600080fd5b5061040760048036038101906104029190612160565b6113d6565b005b60075481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61043d611493565b73ffffffffffffffffffffffffffffffffffffffff1661045b610d53565b73ffffffffffffffffffffffffffffffffffffffff16146104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890612770565b60405180910390fd5b80600660006101000a81548160ff021916908360ff1602179055507fec5ccd96cc77b6219e9d44143df916af68fc169339ea7de5008ff15eae13450d816040516104fb919061288b565b60405180910390a150565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610534611493565b73ffffffffffffffffffffffffffffffffffffffff16610552610d53565b73ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f90612770565b60405180910390fd5b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f38391451438b7e6e244427ebf168c1c4955ab37f81307aa329e3ce3ba24c286681604051610618919061251b565b60405180910390a150565b60026000541415610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090612850565b60405180910390fd5b60026000819055506000600860405180610100016040529081600082016003806020026040519081016040528092919082600380156106e3576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116106ac5790505b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160149054906101000a900460ff161515151581525050905081816040015114610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081a90612750565b60405180910390fd5b8060a001514210610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086090612790565b60405180910390fd5b6005543410156108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a5906126b0565b60405180910390fd5b6064600660009054906101000a900460ff1660ff1682606001516108d291906129f2565b6108dc91906129c1565b81606001516108eb919061296b565b34101561092d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610924906126f0565b60405180910390fd5b60008160c0015190503460086003018190555033600860060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600454428460a001516109999190612a4c565b10905080156109c257600454426109b0919061296b565b8360a001818152506008600501819055505b82604001517f1159164c56f277e6fc99c11731bd380e0347deb969b75523398734c252706ea33334846040516109fa93929190612588565b60405180910390a28015610a495782604001517f6e912a3a9105bdd2af817ba5adc14e6c127c1035b5b648faa29ca0d58ab8ff4e8460a00151604051610a409190612870565b60405180910390a25b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610a8c57610a8b82846060015161149b565b5b505050600160008190555050565b610aa2611493565b73ffffffffffffffffffffffffffffffffffffffff16610ac0610d53565b73ffffffffffffffffffffffffffffffffffffffff1614610b16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0d90612770565b60405180910390fd5b806004819055507f1b55d9f7002bda4490f467e326f22a4a847629c0f2d1ed421607d318d25b410d81604051610b4c9190612870565b60405180910390a150565b610b5f611493565b73ffffffffffffffffffffffffffffffffffffffff16610b7d610d53565b73ffffffffffffffffffffffffffffffffffffffff1614610bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bca90612770565b60405180910390fd5b610bdd600061157e565b565b60088060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160149054906101000a900460ff16905087565b610c64611493565b73ffffffffffffffffffffffffffffffffffffffff16610c82610d53565b73ffffffffffffffffffffffffffffffffffffffff1614610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccf90612770565b60405180910390fd5b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab481604051610d48919061251b565b60405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026000541415610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba90612850565b60405180910390fd5b6002600081905550610dd3611644565b6001600081905550565b610de5611493565b73ffffffffffffffffffffffffffffffffffffffff16610e03610d53565b73ffffffffffffffffffffffffffffffffffffffff1614610e59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5090612770565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d793a179836040518263ffffffff1660e01b8152600401610eb49190612870565b602060405180830381600087803b158015610ece57600080fd5b505af1158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f069190612133565b80156110095750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610f689190612870565b60206040518083038186803b158015610f8057600080fd5b505afa158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb891906120b3565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f90612730565b60405180910390fd5b600042905060006007548261105d919061296b565b90506040518061010001604052808481526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200160008152602001838152602001828152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525060086000820151816000019060036110e3929190611ed4565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160146101000a81548160ff021916908315150217905550905050837f18c01be17ac75e313c54e5ef9c77f189ac10cb7960575650a1c499ed83423316848785856040516111f3949392919061262e565b60405180910390a25050505050565b600660009054906101000a900460ff1681565b61121d611493565b73ffffffffffffffffffffffffffffffffffffffff1661123b610d53565b73ffffffffffffffffffffffffffffffffffffffff1614611291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128890612770565b60405180910390fd5b806005819055507f6ab2e127d7fdf53b8f304e59d3aab5bfe97979f52a85479691a6fab27a28a6b2816040516112c79190612870565b60405180910390a150565b60055481565b60045481565b6112e6611493565b73ffffffffffffffffffffffffffffffffffffffff16611304610d53565b73ffffffffffffffffffffffffffffffffffffffff161461135a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135190612770565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c1906126d0565b60405180910390fd5b6113d38161157e565b50565b6113de611493565b73ffffffffffffffffffffffffffffffffffffffff166113fc610d53565b73ffffffffffffffffffffffffffffffffffffffff1614611452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144990612770565b60405180910390fd5b806007819055507faab6389d8f1c16ba1deb6e9831f5c5442cf4fcf99bf5bfa867460be408a91118816040516114889190612870565b60405180910390a150565b600033905090565b6114a58282611b06565b61157a57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561151357600080fd5b505af1158015611527573d6000803e3d6000fd5b50505050506115798282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611bd19092919063ffffffff16565b5b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860405180610100016040529081600082016003806020026040519081016040528092919082600380156116b6576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161167f5790505b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160149054906101000a900460ff16151515158152505090506000816080015114156117f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ef90612810565b60405180910390fd5b8060e001511561183d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611834906127b0565b60405180910390fd5b8060a00151421015611884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187b906127d0565b60405180910390fd5b6001600860060160146101000a81548160ff02191690831515021790555080604001517fc9f72b276a388619c6d185d146697036241880c36654b1a3ffdad07c24038d998260c0015183606001516040516118e0929190612536565b60405180910390a2600073ffffffffffffffffffffffffffffffffffffffff168160c0015173ffffffffffffffffffffffffffffffffffffffff1614156119575780604001517f38f0a524342c45c820fde6f1f918015581bef487b9b31b3959e8a7d749bfa93060405160405180910390a26119ef565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324bce60c8260c0015183604001516040518363ffffffff1660e01b81526004016119bc929190612536565b600060405180830381600087803b1580156119d657600080fd5b505af11580156119ea573d6000803e3d6000fd5b505050505b600081606001511115611b03576000606482606001518360000151600060038110611a1d57611a1c612c03565b5b602002015160ff16611a2f91906129f2565b611a3991906129c1565b9050611a67600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261149b565b6000606483606001518460000151600160038110611a8857611a87612c03565b5b602002015160ff16611a9a91906129f2565b611aa491906129c1565b9050611ad2601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261149b565b600081838560600151611ae59190612a4c565b611aef9190612a4c565b9050611aff84602001518261149b565b5050505b50565b6000808373ffffffffffffffffffffffffffffffffffffffff168361753090600067ffffffffffffffff811115611b4057611b3f612c32565b5b6040519080825280601f01601f191660200182016040528015611b725781602001600182028036833780820191505090505b50604051611b809190612504565b600060405180830381858888f193505050503d8060008114611bbe576040519150601f19603f3d011682016040523d82523d6000602084013e611bc3565b606091505b505090508091505092915050565b611c528363a9059cbb60e01b8484604051602401611bf092919061255f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c57565b505050565b6000611cb9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d1e9092919063ffffffff16565b9050600081511115611d195780806020019051810190611cd99190612133565b611d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0f90612830565b60405180910390fd5b5b505050565b6060611d2d8484600085611d36565b90509392505050565b606082471015611d7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7290612710565b60405180910390fd5b611d8485611e4a565b611dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dba906127f0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611dec9190612504565b60006040518083038185875af1925050503d8060008114611e29576040519150601f19603f3d011682016040523d82523d6000602084013e611e2e565b606091505b5091509150611e3e828286611e6d565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611e7d57829050611ecd565b600083511115611e905782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec4919061268e565b60405180910390fd5b9392505050565b826003601f01602090048101928215611f5d5791602002820160005b83821115611f2e57835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611ef0565b8015611f5b5782816101000a81549060ff0219169055600101602081600001049283019260010302611f2e565b505b509050611f6a9190611f6e565b5090565b5b80821115611f87576000816000905550600101611f6f565b5090565b6000611f9e611f99846128e6565b6128c1565b90508082856020860282011115611fb857611fb7612c66565b5b60005b85811015611fe85781611fce8882612071565b845260208401935060208301925050600181019050611fbb565b5050509392505050565b60008135905061200181613015565b92915050565b60008151905061201681613015565b92915050565b600082601f83011261203157612030612c61565b5b600361203e848285611f8b565b91505092915050565b6000815190506120568161302c565b92915050565b60008135905061206b81613043565b92915050565b6000813590506120808161305a565b92915050565b60006020828403121561209c5761209b612c6b565b5b60006120aa84828501611ff2565b91505092915050565b6000602082840312156120c9576120c8612c6b565b5b60006120d784828501612007565b91505092915050565b600080600060a084860312156120f9576120f8612c6b565b5b600061210786828701611ff2565b93505060206121188682870161205c565b92505060406121298682870161201c565b9150509250925092565b60006020828403121561214957612148612c6b565b5b600061215784828501612047565b91505092915050565b60006020828403121561217657612175612c6b565b5b60006121848482850161205c565b91505092915050565b6000602082840312156121a3576121a2612c6b565b5b60006121b184828501612071565b91505092915050565b60006121c683836124e6565b60208301905092915050565b6121db81612ae7565b82525050565b6121ea81612a92565b82525050565b6121f981612a80565b82525050565b61220881612916565b6122128184612944565b925061221d8261290c565b8060005b8381101561224e57815161223587826121ba565b965061224083612937565b925050600181019050612221565b505050505050565b61225f81612aa4565b82525050565b600061227082612921565b61227a818561294f565b935061228a818560208601612b41565b80840191505092915050565b61229f81612af9565b82525050565b60006122b08261292c565b6122ba818561295a565b93506122ca818560208601612b41565b6122d381612c70565b840191505092915050565b60006122eb60288361295a565b91506122f682612c81565b604082019050919050565b600061230e60268361295a565b915061231982612cd0565b604082019050919050565b600061233160498361295a565b915061233c82612d1f565b606082019050919050565b600061235460268361295a565b915061235f82612d94565b604082019050919050565b600061237760248361295a565b915061238282612de3565b604082019050919050565b600061239a601f8361295a565b91506123a582612e32565b602082019050919050565b60006123bd60208361295a565b91506123c882612e5b565b602082019050919050565b60006123e060188361295a565b91506123eb82612e84565b602082019050919050565b600061240360298361295a565b915061240e82612ead565b604082019050919050565b600061242660218361295a565b915061243182612efc565b604082019050919050565b6000612449601d8361295a565b915061245482612f4b565b602082019050919050565b600061246c601d8361295a565b915061247782612f74565b602082019050919050565b600061248f602a8361295a565b915061249a82612f9d565b604082019050919050565b60006124b2601f8361295a565b91506124bd82612fec565b602082019050919050565b6124d181612ad0565b82525050565b6124e081612b2f565b82525050565b6124ef81612ada565b82525050565b6124fe81612ada565b82525050565b60006125108284612265565b915081905092915050565b600060208201905061253060008301846121f0565b92915050565b600060408201905061254b60008301856121d2565b61255860208301846124c8565b9392505050565b600060408201905061257460008301856121f0565b61258160208301846124c8565b9392505050565b600060608201905061259d60008301866121f0565b6125aa60208301856124c8565b6125b76040830184612256565b949350505050565b600060e0820190506125d4600083018a6121f0565b6125e160208301896124c8565b6125ee60408301886124c8565b6125fb60608301876124c8565b61260860808301866124c8565b61261560a08301856121e1565b61262260c0830184612256565b98975050505050505050565b600060c08201905061264360008301876121ff565b61265060608301866121f0565b61265d60808301856124c8565b61266a60a08301846124c8565b95945050505050565b60006020820190506126886000830184612296565b92915050565b600060208201905081810360008301526126a881846122a5565b905092915050565b600060208201905081810360008301526126c9816122de565b9050919050565b600060208201905081810360008301526126e981612301565b9050919050565b6000602082019050818103600083015261270981612324565b9050919050565b6000602082019050818103600083015261272981612347565b9050919050565b600060208201905081810360008301526127498161236a565b9050919050565b600060208201905081810360008301526127698161238d565b9050919050565b60006020820190508181036000830152612789816123b0565b9050919050565b600060208201905081810360008301526127a9816123d3565b9050919050565b600060208201905081810360008301526127c9816123f6565b9050919050565b600060208201905081810360008301526127e981612419565b9050919050565b600060208201905081810360008301526128098161243c565b9050919050565b600060208201905081810360008301526128298161245f565b9050919050565b6000602082019050818103600083015261284981612482565b9050919050565b60006020820190508181036000830152612869816124a5565b9050919050565b600060208201905061288560008301846124c8565b92915050565b60006020820190506128a060008301846124d7565b92915050565b60006020820190506128bb60008301846124f5565b92915050565b60006128cb6128dc565b90506128d78282612b74565b919050565b6000604051905090565b600067ffffffffffffffff82111561290157612900612c32565b5b602082029050919050565b6000819050919050565b600060039050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600061297682612ad0565b915061298183612ad0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156129b6576129b5612ba5565b5b828201905092915050565b60006129cc82612ad0565b91506129d783612ad0565b9250826129e7576129e6612bd4565b5b828204905092915050565b60006129fd82612ad0565b9150612a0883612ad0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a4157612a40612ba5565b5b828202905092915050565b6000612a5782612ad0565b9150612a6283612ad0565b925082821015612a7557612a74612ba5565b5b828203905092915050565b6000612a8b82612ab0565b9050919050565b6000612a9d82612ab0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000612af282612b0b565b9050919050565b6000612b0482612b0b565b9050919050565b6000612b1682612b1d565b9050919050565b6000612b2882612ab0565b9050919050565b6000612b3a82612ada565b9050919050565b60005b83811015612b5f578082015181840152602081019050612b44565b83811115612b6e576000848401525b50505050565b612b7d82612c70565b810181811067ffffffffffffffff82111715612b9c57612b9b612c32565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4a7573746963653a204d7573742073656e64206174206c65617374207265736560008201527f7276655072696365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4a7573746963653a204d7573742073656e64206d6f7265207468616e206c617360008201527f7420626964206279206d696e426964496e6372656d656e7450657263656e746160208201527f676520616d6f756e740000000000000000000000000000000000000000000000604082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4a7573746963653a20746f6b656e206964206973206e6f742061756374696f6e60008201527f61626c6500000000000000000000000000000000000000000000000000000000602082015250565b7f4a7573746963653a20417274206e6f7420757020666f722061756374696f6e00600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4a7573746963653a2041756374696f6e20657870697265640000000000000000600082015250565b7f4a7573746963653a2041756374696f6e2068617320616c72656164792062656560008201527f6e20736574746c65640000000000000000000000000000000000000000000000602082015250565b7f4a7573746963653a2041756374696f6e206861736e277420636f6d706c65746560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f4a7573746963653a2041756374696f6e206861736e277420626567756e000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61301e81612a80565b811461302957600080fd5b50565b61303581612aa4565b811461304057600080fd5b50565b61304c81612ad0565b811461305757600080fd5b50565b61306381612ada565b811461306e57600080fd5b5056fea264697066735822122081949b1042f9efcde8e5b9b9e671c53b1fcee8441e7da3c031bdf50d27690ca464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createAuction(address,uint256,uint8[3])": {
        "params": {
          "creator": "the address of the creator so we can pass it to the payment splitter once the auction is settled.",
          "split": "a fixed-sized array of max 3 members which determines how sale proceeds are split between pr1s0nartPayment              (the address that exchanges into USD and pays LFOs), pr1s0nartFund (our onchain fund to cover operations),              and the creator address if they have one and can receive crypto in addition to the LFO payments we cover.              This is likely only the case if they are no longer incarcerated and have an ETH address.",
          "tokenId": "the index of the art piece to be auctioned off"
        }
      },
      "createBid(uint256)": {
        "details": "This contract only accepts payment in ETH."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setDuration(uint256)": {
        "details": "Only callable by the owner."
      },
      "setFundAddress(address)": {
        "details": "Only callable by the owner."
      },
      "setMinBidIncrementPercentage(uint8)": {
        "details": "Only callable by the owner."
      },
      "setPaymentAddress(address)": {
        "details": "Only callable by the owner."
      },
      "setReservePrice(uint256)": {
        "details": "Only callable by the owner."
      },
      "setTimeBuffer(uint256)": {
        "details": "Only callable by the owner."
      },
      "settleAuction()": {
        "details": "This function can only be called when the contract is paused."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Justice Justice - a contract that creates unique NFTs to be auctioned off, using the Restore ERC721 Contract. Adapted from the wonderful Nounders. https://github.com/nounsDAO/nouns-monorepo/blob/2cbe6c7bdfee258e646e8d9e84302375320abc72/packages/nouns-contracts/contracts/NounsAuctionHouse.sol Once auctioned, this contract does not immediatedly transfer the art, but 'freezes' it, while ensuring that the steward of the system, which is multisig maintained by Pr1s0n Art Inc - a 501(c)3 registered in Florida - can only ever transfer them to the winning bidder. Pr1s0n Art takes the funds raised from the sale, exchanges them into USD, pays the Legal Financial Obligations of the people who made the art and then reattaches the receipts as the `data` in `transferToBuyer`, which uses the `safeTransfer` method in the ERC721 standard. This means you receive not just the art, but the full story - aesthetic, economic, and sociopolitical - of a human being's journey home. This contract enacts restorative justice because, unless we are all involved with justice, we will never realise it fully.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Set up the Justice Auction House and prepopulate initial values"
      },
      "createAuction(address,uint256,uint8[3])": {
        "notice": "Create an auction."
      },
      "createBid(uint256)": {
        "notice": "Create a bid for a pr1s0n.art piece, with a given amount."
      },
      "setDuration(uint256)": {
        "notice": "Set the duration for auctions."
      },
      "setFundAddress(address)": {
        "notice": "Set the pr1s0nartFund address (handles onchain fund for operations)"
      },
      "setMinBidIncrementPercentage(uint8)": {
        "notice": "Set the auction minimum bid increment percentage."
      },
      "setPaymentAddress(address)": {
        "notice": "Set the pr1s0nart payment address (handles exchange to USD + LFO payments)."
      },
      "setReservePrice(uint256)": {
        "notice": "Set the auction reserve price."
      },
      "setTimeBuffer(uint256)": {
        "notice": "Set the auction time buffer."
      },
      "settleAuction()": {
        "notice": "Settle the current auction."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 115,
        "contract": "contracts/Justice.sol:Justice",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/Justice.sol:Justice",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1267,
        "contract": "contracts/Justice.sol:Justice",
        "label": "restore",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IRestore)3434"
      },
      {
        "astId": 1269,
        "contract": "contracts/Justice.sol:Justice",
        "label": "weth",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1271,
        "contract": "contracts/Justice.sol:Justice",
        "label": "timeBuffer",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1273,
        "contract": "contracts/Justice.sol:Justice",
        "label": "reservePrice",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1275,
        "contract": "contracts/Justice.sol:Justice",
        "label": "minBidIncrementPercentage",
        "offset": 0,
        "slot": "6",
        "type": "t_uint8"
      },
      {
        "astId": 1277,
        "contract": "contracts/Justice.sol:Justice",
        "label": "duration",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1280,
        "contract": "contracts/Justice.sol:Justice",
        "label": "auction",
        "offset": 0,
        "slot": "8",
        "type": "t_struct(Auction)3270_storage"
      },
      {
        "astId": 1282,
        "contract": "contracts/Justice.sol:Justice",
        "label": "payment",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 1284,
        "contract": "contracts/Justice.sol:Justice",
        "label": "fund",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint8)3_storage": {
        "base": "t_uint8",
        "encoding": "inplace",
        "label": "uint8[3]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRestore)3434": {
        "encoding": "inplace",
        "label": "contract IRestore",
        "numberOfBytes": "20"
      },
      "t_struct(Auction)3270_storage": {
        "encoding": "inplace",
        "label": "struct IJustice.Auction",
        "members": [
          {
            "astId": 3255,
            "contract": "contracts/Justice.sol:Justice",
            "label": "saleSplit",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint8)3_storage"
          },
          {
            "astId": 3257,
            "contract": "contracts/Justice.sol:Justice",
            "label": "creator",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3259,
            "contract": "contracts/Justice.sol:Justice",
            "label": "tokenId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3261,
            "contract": "contracts/Justice.sol:Justice",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3263,
            "contract": "contracts/Justice.sol:Justice",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3265,
            "contract": "contracts/Justice.sol:Justice",
            "label": "endTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3267,
            "contract": "contracts/Justice.sol:Justice",
            "label": "bidder",
            "offset": 0,
            "slot": "6",
            "type": "t_address_payable"
          },
          {
            "astId": 3269,
            "contract": "contracts/Justice.sol:Justice",
            "label": "settled",
            "offset": 20,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}